openapi: "3.0.0"
info:
  version: 1.0.0
  title: Users
  description: TODO
  contact:
    name: Dmitry Makarenko
servers:
  - url: https://{hostname}/api
    variables:
      hostname:
        default: localhost
security:
  - bearerAuth: [ ]
paths:
  /users:
    get:
      operationId: getUsers
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            minimum: 0
            default: 0
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: The numbers of items to return
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: createUser
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      operationId: authLogin
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginRequest'
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthLoginResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required: [ id, role ]
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [ "admin", "manager", "basic" ]
    CreateUserRequest:
      type: object
      required: [ name, email, role, password ]
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [ "admin", "manager", "basic" ]
    Users:
      type: object
      required: [ users ]
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    AuthLoginRequest:
      type: object
      required: [ email, password ]
      properties:
        email:
          type: string
        password:
          type: string
    AuthLoginResponse:
      type: object
      required: [ token ]
      properties:
        token:
          type: string
    Error:
      type: object
      required:
        - slug
        - message
      properties:
        slug:
          type: string
        message:
          type: string