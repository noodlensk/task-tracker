// Package publisher provides primitives to interact with the asyncapi
//
// Code generated by https://github.com/asyncapi/generator/ DO NOT EDIT.
package publisher

import "time"

type UserCreated struct {
	Id         string    `json:"id"`
	Name       string    `json:"name"`
	Email      string    `json:"email"`
	Password   string    `json:"password"`
	Role       string    `json:"role"`
	CreatedAt  time.Time `json:"created_at"`
	ModifiedAt time.Time `json:"modified_at"`
	SentAt     time.Time `json:"sentAt"`
}
type UserUpdated struct {
	Id         string    `json:"id"`
	Name       string    `json:"name"`
	Email      string    `json:"email"`
	Password   string    `json:"password"`
	Role       string    `json:"role"`
	CreatedAt  time.Time `json:"created_at"`
	ModifiedAt time.Time `json:"modified_at"`
	SentAt     time.Time `json:"sentAt"`
}
type TaskAssigned struct {
	Id          string    `json:"id"`
	Title       string    `json:"title"`
	Description string    `json:"description"`
	AssignedTo  string    `json:"assigned_to"`
	CreatedBy   string    `json:"created_by"`
	Status      string    `json:"status"`
	CreatedAt   time.Time `json:"created_at"`
	ModifiedAt  time.Time `json:"modified_at"`
	SentAt      time.Time `json:"sentAt"`
}
type TaskCreated struct {
	Id          string    `json:"id"`
	Title       string    `json:"title"`
	Description string    `json:"description"`
	AssignedTo  string    `json:"assigned_to"`
	CreatedBy   string    `json:"created_by"`
	Status      string    `json:"status"`
	CreatedAt   time.Time `json:"created_at"`
	ModifiedAt  time.Time `json:"modified_at"`
	SentAt      time.Time `json:"sentAt"`
}
type TaskCompleted struct {
	Id          string    `json:"id"`
	Title       string    `json:"title"`
	Description string    `json:"description"`
	AssignedTo  string    `json:"assigned_to"`
	CreatedBy   string    `json:"created_by"`
	Status      string    `json:"status"`
	CreatedAt   time.Time `json:"created_at"`
	ModifiedAt  time.Time `json:"modified_at"`
	SentAt      time.Time `json:"sentAt"`
}
type TaskEstimated struct {
	Id            string    `json:"id"`
	AssignedPrice float32   `json:"assignedPrice"`
	CompetedPrice float32   `json:"competedPrice"`
	SentAt        time.Time `json:"sentAt"`
}
type UserCharged struct {
	UserUid string    `json:"user_uid"`
	Amount  float32   `json:"amount"`
	Reason  string    `json:"reason"`
	SentAt  time.Time `json:"sentAt"`
}
type UserPayed struct {
	UserUid string    `json:"user_uid"`
	Amount  float32   `json:"amount"`
	Reason  string    `json:"reason"`
	SentAt  time.Time `json:"sentAt"`
}
